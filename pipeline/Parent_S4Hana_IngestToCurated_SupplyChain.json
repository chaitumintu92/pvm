{
	"name": "Parent_S4Hana_IngestToCurated_SupplyChain",
	"properties": {
		"activities": [
			{
				"name": "Get Configuration",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDatabricksDeltaLakeSource",
						"query": {
							"value": "@if(equals(pipeline().parameters.objectname,'all'),replace(replace(replace(variables('configsqlqry'),'<pipelinename>',pipeline().Pipeline),'conformed_catalog',pipeline().globalParameters.conformed_catalog),'<instance>',pipeline().parameters.instance),concat(replace(replace(replace(variables('configsqlqry'),'<pipelinename>',pipeline().Pipeline),'conformed_catalog',pipeline().globalParameters.conformed_catalog),'<instance>',pipeline().parameters.instance),' and objectname in (',pipeline().parameters.objectname,')'))",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "src_DeltaLake_Table_SCM",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Load S4Hana Data to Curated",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Configuration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Configuration').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "Call Child Pipeline Ingest S4Hana Data",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Child_S4_IngestToCurated_SupplyChain",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"processdate": {
										"value": "@pipeline().parameters.processdate",
										"type": "Expression"
									},
									"eltcontrolid": {
										"value": "@item().eltcontrol_sk",
										"type": "Expression"
									},
									"eltconfigid": {
										"value": "@item().eltconfig_sk",
										"type": "Expression"
									},
									"basecontainer": {
										"value": "@item().sap_mount_point",
										"type": "Expression"
									},
									"directory": {
										"value": "@item().sourcelocation",
										"type": "Expression"
									},
									"insertnotebookname": {
										"value": "@item().insertnotebookname",
										"type": "Expression"
									},
									"updatenotebookname": {
										"value": "@item().updatenotebookname",
										"type": "Expression"
									},
									"databricksfolder": {
										"value": "@item().databricksfolder",
										"type": "Expression"
									},
									"rawtocuratednotebook": {
										"value": "@item().raw_to_curated_notebook_path",
										"type": "Expression"
									},
									"objectname": {
										"value": "@item().objectname",
										"type": "Expression"
									},
									"sourcesystem": {
										"value": "@item().sourcesystem",
										"type": "Expression"
									},
									"ingestionparam": {
										"value": "@concat('sap_cds_view_name:',item().sap_cds_view_name,',sap_cds_key_columns:',replace(item().sap_cds_key_columns,',','-'),',sap_checkpoint_key:',item().sap_checkpoint_key)",
										"type": "Expression"
									},
									"sap_cds_view_name": {
										"value": "@concat(item().sap_cds_view_name,'$P')",
										"type": "Expression"
									},
									"sap_cds_key_columns": {
										"value": "@split(item().sap_cds_key_columns,',')",
										"type": "Expression"
									},
									"sap_checkpoint_key": {
										"value": "@item().sap_checkpoint_key",
										"type": "Expression"
									},
									"source_file_type": {
										"value": "@item().source_file_type",
										"type": "Expression"
									},
									"datamodelname": {
										"value": "@item().datamodelname",
										"type": "Expression"
									},
									"parent_controlid": {
										"value": "@item().parentcontrol_sk",
										"type": "Expression"
									},
									"rawtocuratedfunction": {
										"value": "@item().rawtocuratedfunction",
										"type": "Expression"
									},
									"project_id": {
										"value": "@pipeline().parameters.project_id",
										"type": "Expression"
									},
									"curated_tablename": {
										"value": "@item().curatedtablename",
										"type": "Expression"
									},
									"Function": {
										"value": "@item().rawtocuratedfunction",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"processdate": {
				"type": "string",
				"defaultValue": "2024-07-18T15:51:43.464Z"
			},
			"objectname": {
				"type": "string",
				"defaultValue": "all"
			},
			"instance": {
				"type": "string",
				"defaultValue": "'scm'"
			},
			"project_id": {
				"type": "string",
				"defaultValue": "2100"
			}
		},
		"variables": {
			"configsqlqry": {
				"type": "String",
				"defaultValue": "SELECT em.parentid as parentcontrol_sk, ec.id, ec.objectname, ec.isincremental, istransactional, ec.eltcontrol_sk, ec.id as eltconfig_sk, ec.sourcesystem, cast(date_add(coalesce(lastsuccessfulrundate, startdate), - cast(ec.incrementalduration as int)) as date) as startdate, cast(coalesce(enddate, current_timestamp()) as date) as enddate, sourcesetting.datamodelname, sourcesetting.sap_checkpoint_key, sourcesetting.sap_cds_view_name, sourcesetting.sap_mount_point, sourcesetting.sap_cds_key_columns, sourcesetting.sourcelocation, sourcesetting.source_file_type, sourcesetting.databricksfolder, sourcesetting.raw_to_curated_notebook_path,sourcesetting.insertnotebookname, sourcesetting.updatenotebookname, sourcesetting.ddlnotebookname,  sourcesetting.raw_to_sapis_notebook_path ,sourcesetting.truncatenotebookname, sinksetting.targetlocation, sinksetting.load_type, sinksetting.target_file_type, sinksetting.rawtosapisfunction, sinksetting.sqltablename, sinksetting.rawtocuratedfunction, sinksetting.curatedtablename FROM conformed_catalog.audit.elt_control em inner join conformed_catalog.audit.elt_config ec  on em.id = ec.eltcontrol_sk inner join conformed_catalog.audit.elt_control ect on ect.id = ec.eltcontrol_sk where ec.isenabled = 1 and ect.pipelinename = '<pipelinename>' and ec.sourcesetting.instance in (<instance>) "
			},
			"execute_objects": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Supply Chain Reporting"
		},
		"annotations": [],
		"lastPublishTime": "2025-01-06T11:48:30Z"
	}
}